version: '3'

services:
  mongodb:
    image: 'mongo:latest'
    ports:
      - '27017:27017'
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
  adguard:
    image: 'adguard/adguardhome:latest'
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '80:80/tcp'
      - '443:443/tcp'
      - '443:443/udp'
      - '784:784/udp'
      - '853:853/tcp'
      - '853:853/udp'
      - '5443/tcp'
      - '5443/udp'
      - '3000:3000/tcp'
      - '8853:8853/udp'
    volumes:
      - './adg/workdir:/opt/adguardhome/work'
      - './adg/confdir:/opt/adguardhome/conf'
    healthcheck:
      test: [ "CMD", "wget", "http://127.0.0.1:3000", "-qO", "/dev/null" ]
      interval: 1s
      timeout: 30s
  backend:
    build: 'backend'
    depends_on:
      mongodb:
        condition: service_healthy
    network_mode: 'host'
    command: 'gunicorn -b 0.0.0.0:5000 app:app --reload'
    volumes:
      - './backend/:/srv'
    healthcheck:
      test: curl -f http://localhost:5000/health_check
      interval: 1s
      timeout: 10s
    privileged: true
    cap_add:
      - NET_ADMIN
      - NET_RAW
  frontend:
    build: 'frontend'
    ports:
      - '8000:8000'
    volumes:
      - './frontend/:/srv'
      - '/srv/node_modules'
      - '/srv/dist'
#    healthcheck:
#      test: curl -f http://localhost:5000/health_check
#      interval: 1s
#      timeout: 10s